---
import Title from "@/components/Title.astro";

const { t } = Astro.props;
const galleryImages = t.images.map((img) => img.src);
---

<section id="galeria" class="container animate-on-scroll">
  <Title text={t.titulo} color="green" class="anim-item" />

  <p class="anim-item">{t.descripcion}</p>

  <div class="gallery-grid anim-item">
    {
      t.images.map((img) => (
        <a href={img.src} class="gallery-item anim-item">
          <img src={img.src} alt={img.alt} loading="lazy" />
          <div class="overlay">
            <svg
              width="48"
              height="48"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z"
                stroke="white"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M21 21L16.65 16.65"
                stroke="white"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
          </div>
        </a>
      ))
    }
  </div>

  <div id="lightbox" class="lightbox-container">
    <button class="close-btn">&times;</button>
    <button class="nav-btn prev-btn">
      <svg viewBox="0 0 24 24"><path d="M15 18l-6-6 6-6"></path></svg>
    </button>
    <img src="" alt="Vista ampliada de la foto" class="lightbox-image" />
    <button class="nav-btn next-btn">
      <svg viewBox="0 0 24 24"><path d="M9 18l6-6-6-6"></path></svg>
    </button>
  </div>
</section>

<style>
  p {
    text-align: center;
    font-size: var(--font-4);
    line-height: 1.6;
    max-width: 900px;
    color: var(--color-gray);
    margin: 0;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 1.5rem;
    width: 100%;
    max-width: 1200px;
    margin: auto;
    aspect-ratio: 16 / 9;
    z-index: 2;
  }

  .gallery-item:nth-child(1) {
    grid-area: 2 / 3 / 3 / 5;
  }
  .gallery-item:nth-child(2) {
    grid-area: 1 / 1 / 2 / 4;
  }
  .gallery-item:nth-child(3) {
    grid-area: 1 / 4 / 2 / 6;
  }
  .gallery-item:nth-child(4) {
    grid-area: 1 / 6 / 2 / 8;
  }
  .gallery-item:nth-child(5) {
    grid-area: 2 / 5 / 3 / 8;
  }
  .gallery-item:nth-child(6) {
    grid-area: 2 / 1 / 3 / 3;
  }

  .gallery-item {
    position: relative;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .gallery-item:hover {
    transform: translateY(-5px) scale(1.03);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .gallery-item:hover .overlay {
    opacity: 1;
  }

  /* --- ESTILOS DEL LIGHTBOX --- */
  .lightbox-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.85);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.4s ease,
      visibility 0.4s ease;
  }

  .lightbox-container.is-visible {
    opacity: 1;
    visibility: visible;
  }

  .lightbox-image {
    max-width: 85%;
    max-height: 85%;
    object-fit: contain;
    transition:
      transform 0.4s ease,
      opacity 0.3s ease;
    transform: scale(0.95);
    cursor: pointer;
    border-radius: 10px;
  }

  .lightbox-container.is-visible .lightbox-image {
    transform: scale(1);
  }

  .lightbox-image.is-fading {
    opacity: 0;
  }

  .close-btn {
    position: absolute;
    top: 2rem;
    right: 2rem;
    background: none;
    border: none;
    color: var(--color-white);
    font-size: 3rem;
    cursor: pointer;
    line-height: 1;
  }

  .nav-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.3s ease;
  }

  .nav-btn:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .nav-btn svg {
    width: 24px;
    height: 24px;
    stroke: var(--color-white);
    stroke-width: 3;
    fill: none;
  }

  .prev-btn {
    left: 2rem;
  }

  .next-btn {
    right: 2rem;
  }

  /* --- ANIMACIONES --- */

  :global(.animate) .gallery-item.anim-item:nth-child(1) {
    animation-delay: 0.5s;
  }
  :global(.animate) .gallery-item.anim-item:nth-child(2) {
    animation-delay: 0.6s;
  }
  :global(.animate) .gallery-item.anim-item:nth-child(3) {
    animation-delay: 0.7s;
  }
  :global(.animate) .gallery-item.anim-item:nth-child(4) {
    animation-delay: 0.8s;
  }
  :global(.animate) .gallery-item.anim-item:nth-child(5) {
    animation-delay: 0.9s;
  }
  :global(.animate) .gallery-item.anim-item:nth-child(6) {
    animation-delay: 1s;
  }

  /* --- MEDIA QUERIES --- */

  @media (max-width: 900px) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(5, 1fr);
      aspect-ratio: auto;
      max-height: 800px;
      gap: 1.7rem;
    }

    .gallery-item:nth-child(1) {
      grid-area: 1 / 1 / 4 / 2;
    }
    .gallery-item:nth-child(2) {
      grid-area: 4 / 1 / 5 / 2;
    }
    .gallery-item:nth-child(3) {
      grid-area: 5 / 1 / 6 / 2;
    }
    .gallery-item:nth-child(4) {
      grid-area: 1 / 2 / 2 / 3;
    }
    .gallery-item:nth-child(5) {
      grid-area: 2 / 2 / 3 / 3;
    }
    .gallery-item:nth-child(6) {
      grid-area: 3 / 2 / 6 / 3;
    }

    .nav-btn {
      width: 40px;
      height: 40px;
    }

    .prev-btn {
      left: 1rem;
    }

    .next-btn {
      right: 1rem;
    }

    p {
      font-size: var(--font-5);
    }
  }

  :global(body.no-scroll) {
    overflow: hidden;
  }
</style>

<script type="module" client:load>
  // galleryImages ya existe porque lo definimos arriba como const
  const galleryImages = [...document.querySelectorAll(".gallery-item")].map(
    (a) => a.getAttribute("href")
  );

  function setupGallery() {
    const galleryItems = document.querySelectorAll(".gallery-item");
    const lightbox = document.getElementById("lightbox");
    const lightboxImage = lightbox?.querySelector(".lightbox-image");
    const closeBtn = lightbox?.querySelector(".close-btn");
    const prevBtn = lightbox?.querySelector(".prev-btn");
    const nextBtn = lightbox?.querySelector(".next-btn");

    let currentIndex = 0;

    if (!lightbox || !lightboxImage || galleryItems.length === 0) return;

    function showImage(index) {
      const newSrc = galleryImages[index];
      lightboxImage.classList.add("is-fading");
      setTimeout(() => {
        lightboxImage.setAttribute("src", newSrc);
        lightboxImage.classList.remove("is-fading");
      }, 200);
    }

    function openLightbox(e) {
      e.preventDefault();
      const link = e.currentTarget;
      const clickedSrc = link.getAttribute("href");
      currentIndex = galleryImages.findIndex((src) => src === clickedSrc);

      showImage(currentIndex);
      lightbox.classList.add("is-visible");
      document.body.classList.add("no-scroll");
    }

    function closeLightbox() {
      lightbox.classList.remove("is-visible");
      document.body.classList.remove("no-scroll");
    }

    function showNextImage() {
      currentIndex = (currentIndex + 1) % galleryImages.length;
      showImage(currentIndex);
    }

    function showPrevImage() {
      currentIndex = (currentIndex - 1 + galleryImages.length) % galleryImages.length;
      showImage(currentIndex);
    }

    galleryItems.forEach((item) => item.addEventListener("click", openLightbox));
    closeBtn?.addEventListener("click", closeLightbox);
    lightboxImage?.addEventListener("click", closeLightbox);
    prevBtn?.addEventListener("click", showPrevImage);
    nextBtn?.addEventListener("click", showNextImage);

    document.addEventListener("keydown", (e) => {
      if (!lightbox.classList.contains("is-visible")) return;
      if (e.key === "ArrowRight") showNextImage();
      if (e.key === "ArrowLeft") showPrevImage();
      if (e.key === "Escape") closeLightbox();
    });
  }

  setupGallery();
</script>

