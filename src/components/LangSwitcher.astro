---
import { LANGUAGES, defaultLang, type AppLocale } from "@/locales";
import Flag from "@/icons/flags/Flag.astro";

const currentLocale = (Astro.url.pathname.split("/")[1] ||
  defaultLang) as AppLocale;
const currentLang = LANGUAGES[currentLocale];
const otherLangs = Object.entries(LANGUAGES).filter(
  ([code]) => code !== currentLocale
);
---

<div class="lang-switcher">
  <button class="current-lang-btn">
    <Flag code={currentLocale} class="flag-icon" />
    <span>{currentLang.name}</span>
    <svg class="chevron" width="12" height="12" viewBox="0 0 24 24"
      ><path d="m6 9 6 6 6-6"></path></svg
    >
  </button>

  <ul class="lang-dropdown">
    {
      otherLangs.map(([code, lang]) => (
        <li>
          <a href={`/${code}/`}>
            <Flag code={code} class="flag-icon" />
            <span>{lang.name}</span>
          </a>
        </li>
      ))
    }
  </ul>
</div>

<style>
  .lang-switcher {
    position: relative;
    font-family: var(--body-font);
    height: fit-content;
    margin: auto;
  }
  .current-lang-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background-color: white;
    border: 1px solid #eee;
    padding: 0.4rem 0.8rem;
    border-radius: 50px;
    cursor: pointer;
    font-size: var(--font-6);
    font-weight: bold;
    color: var(--color-gray);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
  }
  .chevron {
    width: 14px;
    height: 14px;
    stroke: var(--color-gray);
    stroke-width: 2;
    fill: none;
    transition: transform 0.3s ease;
  }
  .lang-switcher.is-open .chevron {
    transform: rotate(180deg);
  }

  .lang-dropdown {
    position: absolute;
    top: calc(100% + 5px);
    right: -0px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    list-style: none;
    padding: 0.5rem;
    margin: 0;
    z-index: 10;
    width: max-content;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
  }
  .lang-switcher.is-open .lang-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .lang-dropdown a {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: var(--color-gray);
    border-radius: 5px;
    font-size: var(--font-6);
    font-weight: bold;
  }
  .lang-dropdown a:hover {
    background-color: #f5f5f5;
    color: var(--color-brown);
  }
  :global(.flag-icon) {
    width: 20px;
    height: auto;
    border-radius: 2px;
    border: 1px solid #eee;
    flex-shrink: 0;
  }

  /* --- MEDIA QUERIES --- */

  @media (max-width: 900px) {
    .lang-dropdown {
      top: unset;
      bottom: calc(100% + 5px);
      right: -0px;
    }
  }
</style>

<script>
  function setupLangSwitchers() {
    const switchers = document.querySelectorAll(".lang-switcher");

    switchers.forEach((switcher) => {
      const button = switcher.querySelector(".current-lang-btn");
      if (!button) return;

      button.addEventListener("click", (e) => {
        e.stopPropagation();

        switchers.forEach((otherSwitcher) => {
          if (otherSwitcher !== switcher) {
            otherSwitcher.classList.remove("is-open");
          }
        });

        switcher.classList.toggle("is-open");
      });
    });

    document.addEventListener("click", () => {
      switchers.forEach((switcher) => {
        if (switcher.classList.contains("is-open")) {
          switcher.classList.remove("is-open");
        }
      });
    });
  }
  document.addEventListener("DOMContentLoaded", setupLangSwitchers);
</script>
